upstream odoo {
    server 127.0.0.1:8069;
}
upstream odoo-chat {
    server 127.0.0.1:8072;
}
upstream uber-mock {
    server 127.0.0.1:8001;
}

# Main Odoo server - iinllm.com
server {
    listen 80;
    server_name iinllm.com www.iinllm.com;
    client_max_body_size 500M;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    # Redirect to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name iinllm.com www.iinllm.com;
    client_max_body_size 500M;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/iinllm.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/iinllm.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/iinllm.com/chain.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Logging
    access_log /var/log/nginx/odoo.access.log;
    error_log /var/log/nginx/odoo.error.log;
    
    # Proxy settings
    proxy_read_timeout 720s;
    proxy_connect_timeout 720s;
    proxy_send_timeout 720s;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    
    # Odoo longpolling
    location /longpolling {
        proxy_pass http://odoo-chat;
    }
    
    # Odoo static files (optimization)
    location ~* /web/static/ {
        proxy_cache_valid 200 90m;
        proxy_buffering on;
        expires 864000;
        proxy_pass http://odoo;
    }
    
    # Main Odoo application (must be last)
    location / {
        proxy_redirect off;
        proxy_pass http://odoo;
    }
    
    # Gzip compression
    gzip on;
    gzip_types text/css text/less text/plain text/xml application/xml
               application/json application/javascript;
}

# API subdomain - api.iinllm.com
server {
    listen 80;
    server_name api.iinllm.com;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    # Redirect to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name api.iinllm.com;
    client_max_body_size 10M;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/api.iinllm.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.iinllm.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Logging
    access_log /var/log/nginx/api.access.log;
    error_log /var/log/nginx/api.error.log;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # Uber Mock API
    location / {
        proxy_pass http://uber-mock;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
    }
    
    # Gzip compression
    gzip on;
    gzip_types text/css text/less text/plain text/xml application/xml
               application/json application/javascript;
}